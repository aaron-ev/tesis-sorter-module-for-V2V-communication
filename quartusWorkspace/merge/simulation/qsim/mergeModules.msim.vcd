$comment
	File created using the following command:
		vcd file mergeModules.msim.vcd -direction
$end
$date
	Tue Aug 03 17:08:53 2021
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ps
$end
$scope module merge4to8_vlg_vec_tst $end
$var reg 12 ! a [11:0] $end
$var reg 12 " b [11:0] $end
$var wire 1 # c [23] $end
$var wire 1 $ c [22] $end
$var wire 1 % c [21] $end
$var wire 1 & c [20] $end
$var wire 1 ' c [19] $end
$var wire 1 ( c [18] $end
$var wire 1 ) c [17] $end
$var wire 1 * c [16] $end
$var wire 1 + c [15] $end
$var wire 1 , c [14] $end
$var wire 1 - c [13] $end
$var wire 1 . c [12] $end
$var wire 1 / c [11] $end
$var wire 1 0 c [10] $end
$var wire 1 1 c [9] $end
$var wire 1 2 c [8] $end
$var wire 1 3 c [7] $end
$var wire 1 4 c [6] $end
$var wire 1 5 c [5] $end
$var wire 1 6 c [4] $end
$var wire 1 7 c [3] $end
$var wire 1 8 c [2] $end
$var wire 1 9 c [1] $end
$var wire 1 : c [0] $end
$scope module i1 $end
$var wire 1 ; gnd $end
$var wire 1 < vcc $end
$var wire 1 = unknown $end
$var tri1 1 > devclrn $end
$var tri1 1 ? devpor $end
$var tri1 1 @ devoe $end
$var wire 1 A oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|L[1]~1_combout $end
$var wire 1 B oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|H[2]~2_combout $end
$var wire 1 C oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|L[0]~0_combout $end
$var wire 1 D oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|LessThan0~0_combout $end
$var wire 1 E oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|LessThan0~1_combout $end
$var wire 1 F oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|H[1]~1_combout $end
$var wire 1 G oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|LessThan0~2_combout $end
$var wire 1 H a[6]~input_o $end
$var wire 1 I a[3]~input_o $end
$var wire 1 J c[0]~output_o $end
$var wire 1 K c[1]~output_o $end
$var wire 1 L c[2]~output_o $end
$var wire 1 M c[3]~output_o $end
$var wire 1 N c[4]~output_o $end
$var wire 1 O c[5]~output_o $end
$var wire 1 P c[6]~output_o $end
$var wire 1 Q c[7]~output_o $end
$var wire 1 R c[8]~output_o $end
$var wire 1 S c[9]~output_o $end
$var wire 1 T c[10]~output_o $end
$var wire 1 U c[11]~output_o $end
$var wire 1 V c[12]~output_o $end
$var wire 1 W c[13]~output_o $end
$var wire 1 X c[14]~output_o $end
$var wire 1 Y c[15]~output_o $end
$var wire 1 Z c[16]~output_o $end
$var wire 1 [ c[17]~output_o $end
$var wire 1 \ c[18]~output_o $end
$var wire 1 ] c[19]~output_o $end
$var wire 1 ^ c[20]~output_o $end
$var wire 1 _ c[21]~output_o $end
$var wire 1 ` c[22]~output_o $end
$var wire 1 a c[23]~output_o $end
$var wire 1 b b[0]~input_o $end
$var wire 1 c a[0]~input_o $end
$var wire 1 d a[2]~input_o $end
$var wire 1 e a[1]~input_o $end
$var wire 1 f b[2]~input_o $end
$var wire 1 g oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|LessThan0~1_combout $end
$var wire 1 h oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|LessThan0~0_combout $end
$var wire 1 i oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|L[0]~0_combout $end
$var wire 1 j oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|LessThan0~2_combout $end
$var wire 1 k b[1]~input_o $end
$var wire 1 l oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|L[1]~1_combout $end
$var wire 1 m oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|L[2]~2_combout $end
$var wire 1 n b[4]~input_o $end
$var wire 1 o a[5]~input_o $end
$var wire 1 p a[4]~input_o $end
$var wire 1 q oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|LessThan0~0_combout $end
$var wire 1 r oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|LessThan0~1_combout $end
$var wire 1 s b[3]~input_o $end
$var wire 1 t oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|LessThan0~2_combout $end
$var wire 1 u oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|L[1]~2_combout $end
$var wire 1 v a[8]~input_o $end
$var wire 1 w b[8]~input_o $end
$var wire 1 x oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|LessThan0~0_combout $end
$var wire 1 y oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|H[0]~0_combout $end
$var wire 1 z oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|LessThan0~1_combout $end
$var wire 1 { oddEvenMerge[0].merge2to4_0|oddEvenMerge[0].comparator_0|H[1]~1_combout $end
$var wire 1 | oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|LessThan0~2_combout $end
$var wire 1 } oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|L[2]~2_combout $end
$var wire 1 ~ b[5]~input_o $end
$var wire 1 !! oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|L[2]~1_combout $end
$var wire 1 "! finalComparators[1].comparator_0|LessThan0~0_combout $end
$var wire 1 #! b[6]~input_o $end
$var wire 1 $! b[7]~input_o $end
$var wire 1 %! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|LessThan0~0_combout $end
$var wire 1 &! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|LessThan0~1_combout $end
$var wire 1 '! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|L[0]~0_combout $end
$var wire 1 (! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|L[0]~0_combout $end
$var wire 1 )! finalComparators[1].comparator_0|LessThan0~1_combout $end
$var wire 1 *! oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|L[0]~0_combout $end
$var wire 1 +! finalComparators[1].comparator_0|L[0]~2_combout $end
$var wire 1 ,! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|LessThan0~3_combout $end
$var wire 1 -! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|L[1]~1_combout $end
$var wire 1 .! finalComparators[1].comparator_0|LessThan0~2_combout $end
$var wire 1 /! finalComparators[1].comparator_0|L[1]~3_combout $end
$var wire 1 0! finalComparators[1].comparator_0|L[2]~4_combout $end
$var wire 1 1! finalComparators[1].comparator_0|H[0]~2_combout $end
$var wire 1 2! finalComparators[1].comparator_0|H[1]~3_combout $end
$var wire 1 3! finalComparators[1].comparator_0|H[2]~4_combout $end
$var wire 1 4! a[10]~input_o $end
$var wire 1 5! b[11]~input_o $end
$var wire 1 6! a[11]~input_o $end
$var wire 1 7! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|LessThan0~0_combout $end
$var wire 1 8! a[9]~input_o $end
$var wire 1 9! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|LessThan0~1_combout $end
$var wire 1 :! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|LessThan0~2_combout $end
$var wire 1 ;! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|L[1]~1_combout $end
$var wire 1 <! oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|H[2]~2_combout $end
$var wire 1 =! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|LessThan0~3_combout $end
$var wire 1 >! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|L[1]~2_combout $end
$var wire 1 ?! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|L[2]~1_combout $end
$var wire 1 @! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|H[2]~2_combout $end
$var wire 1 A! finalComparators[2].comparator_0|LessThan0~0_combout $end
$var wire 1 B! finalComparators[2].comparator_0|LessThan0~1_combout $end
$var wire 1 C! oddEvenMerge[1].merge2to4_1|oddEvenMerge[0].comparator_0|H[0]~0_combout $end
$var wire 1 D! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|L[0]~0_combout $end
$var wire 1 E! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|H[0]~0_combout $end
$var wire 1 F! finalComparators[2].comparator_0|L[0]~0_combout $end
$var wire 1 G! oddEvenMerge[0].merge2to4_0|finalComparators[0].comparator_2|H[1]~1_combout $end
$var wire 1 H! finalComparators[2].comparator_0|LessThan0~2_combout $end
$var wire 1 I! finalComparators[2].comparator_0|L[1]~1_combout $end
$var wire 1 J! finalComparators[2].comparator_0|L[2]~2_combout $end
$var wire 1 K! finalComparators[2].comparator_0|H[0]~0_combout $end
$var wire 1 L! finalComparators[2].comparator_0|H[1]~1_combout $end
$var wire 1 M! finalComparators[2].comparator_0|H[2]~2_combout $end
$var wire 1 N! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|H[0]~0_combout $end
$var wire 1 O! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|H[2]~2_combout $end
$var wire 1 P! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|H[2]~1_combout $end
$var wire 1 Q! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|H[1]~2_combout $end
$var wire 1 R! finalComparators[3].comparator_0|LessThan0~1_combout $end
$var wire 1 S! finalComparators[3].comparator_0|LessThan0~0_combout $end
$var wire 1 T! oddEvenMerge[1].merge2to4_1|finalComparators[0].comparator_2|H[0]~0_combout $end
$var wire 1 U! finalComparators[3].comparator_0|L[0]~2_combout $end
$var wire 1 V! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|LessThan0~2_combout $end
$var wire 1 W! a[7]~input_o $end
$var wire 1 X! oddEvenMerge[0].merge2to4_0|oddEvenMerge[1].comparator_1|H[1]~1_combout $end
$var wire 1 Y! finalComparators[3].comparator_0|LessThan0~2_combout $end
$var wire 1 Z! finalComparators[3].comparator_0|L[1]~3_combout $end
$var wire 1 [! finalComparators[3].comparator_0|L[2]~4_combout $end
$var wire 1 \! finalComparators[3].comparator_0|H[0]~2_combout $end
$var wire 1 ]! finalComparators[3].comparator_0|H[1]~3_combout $end
$var wire 1 ^! finalComparators[3].comparator_0|H[2]~4_combout $end
$var wire 1 _! b[9]~input_o $end
$var wire 1 `! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|H[0]~0_combout $end
$var wire 1 a! b[10]~input_o $end
$var wire 1 b! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|H[1]~1_combout $end
$var wire 1 c! oddEvenMerge[1].merge2to4_1|oddEvenMerge[1].comparator_1|H[2]~2_combout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !
bx "
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
0;
1<
x=
1>
1?
1@
xA
xB
xC
xD
xE
xF
xG
xH
xI
xJ
xK
xL
xM
xN
xO
xP
xQ
xR
xS
xT
xU
xV
xW
xX
xY
xZ
x[
x\
x]
x^
x_
x`
xa
xb
xc
xd
xe
xf
xg
xh
xi
xj
xk
xl
xm
xn
xo
xp
xq
xr
xs
xt
xu
xv
xw
xx
xy
xz
x{
x|
x}
x~
x!!
x"!
x#!
x$!
x%!
x&!
x'!
x(!
x)!
x*!
x+!
x,!
x-!
x.!
x/!
x0!
x1!
x2!
x3!
x4!
x5!
x6!
x7!
x8!
x9!
x:!
x;!
x<!
x=!
x>!
x?!
x@!
xA!
xB!
xC!
xD!
xE!
xF!
xG!
xH!
xI!
xJ!
xK!
xL!
xM!
xN!
xO!
xP!
xQ!
xR!
xS!
xT!
xU!
xV!
xW!
xX!
xY!
xZ!
x[!
x\!
x]!
x^!
x_!
x`!
xa!
xb!
xc!
$end
#20000
bx0xx !
bx00x !
bx001 !
bx0xx001 !
bx01x001 !
bx011001 !
bx1xx011001 !
bx10x011001 !
bx100011001 !
b1xx100011001 !
b10x100011001 !
b101100011001 !
bx0xx "
bx00x "
bx000 "
bx0xx000 "
bx01x000 "
bx011000 "
bx1xx011000 "
bx10x011000 "
bx101011000 "
b1xx101011000 "
b11x101011000 "
b111101011000 "
0b
0k
0f
1s
1n
0~
1#!
0$!
1w
1_!
1a!
15!
1c
0e
0d
1I
1p
0o
0H
0W!
1v
18!
04!
16!
0{
0h
1g
1x
0B
1C!
1*!
1u
1r
0q
1F
0<!
0!!
1D
0X!
1&!
0%!
0A
1O!
1@!
1C
09!
17!
1P!
0l
0m
1`!
1c!
0G!
0-!
1y
0j
0z
1,!
0}
1T!
1D!
0E
0t
0?!
1=!
1V!
1N!
0'!
1:!
0K
0L
1_
1a
09
08
1%
1#
0i
1^!
1[!
0B!
0A!
0)!
1"!
0E!
1(!
0|
0G
1>!
0;!
0J
1^
1[
0:
1&
1)
03!
00!
1\!
1U!
1b!
0H!
1.!
0Q!
0R
0O
1\
1Y
1`
02
05
1(
1+
1$
0K!
1F!
11!
1+!
0S!
1R!
0V
1S
1P
1M
0.
11
14
17
1M!
0L!
0J!
1I!
12!
0/!
0]!
0Z!
0Y!
1X
0W
0U
1T
1Q
0N
0]
0Z
1,
0-
0/
10
13
06
0'
0*
#60000
b101100011x01 !
b101100011xx1 !
b101100011xxx !
b101100x11xxx !
b101100xx1xxx !
b101100xxxxxx !
b101x00xxxxxx !
b101xx0xxxxxx !
b101xxxxxxxxx !
bx01xxxxxxxxx !
bx1xxxxxxxxx !
bx !
b111101011x00 "
b111101011xx0 "
b111101011xxx "
b111101x11xxx "
b111101xx1xxx "
b111101xxxxxx "
b111x01xxxxxx "
b111xx1xxxxxx "
b111xxxxxxxxx "
bx11xxxxxxxxx "
bx1xxxxxxxxx "
bx "
xb
xk
xf
xs
xn
x~
x#!
x$!
xw
x_!
xa!
x5!
xc
xe
xd
xI
xp
xo
xH
xW!
xv
x8!
x4!
x6!
xy
xj
x{
xh
xg
xx
xB
xC!
x*!
xt
xu
xr
xq
xF
x<!
x!!
xD
xV!
xN!
x'!
xX!
x&!
x%!
xA
xO!
x@!
x,!
xC
x;!
x9!
x7!
xP!
x=!
xi
xl
xm
x3!
x^!
x`!
xb!
xc!
xE!
x(!
xz
xG!
x-!
x|
x}
xT!
xD!
xE
x)!
x"!
xQ!
x>!
xG
x?!
xY!
xS!
xR!
xA!
x:!
xJ
xK
xL
xR
x^
x_
x`
xa
x:
x9
x8
x2
x&
x%
x$
x#
x1!
x2!
xU!
x]!
xM!
x[!
xH!
x.!
xB!
xP
xQ
xY
x]
xX
x[
x4
x3
x+
x'
x,
x)
xK!
xF!
x+!
xL!
xI!
x/!
x0!
x\!
xZ!
xJ!
xV
xS
xM
xW
xT
xN
xO
x\
xZ
xU
x.
x1
x7
x-
x0
x6
x5
x(
x*
x/
#1000000
