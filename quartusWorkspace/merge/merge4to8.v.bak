
module merge4to8#(parameter WIDTH = 8,parameter n = 4)
(
	input [(2*WIDTH)-1:0]a,b,
	output [(2*n)*WIDTH-1:0]c
);

wire [(n-1)*WIDTH:0] tempA; 
wire [(n-1)*WIDTH:0] tempB; 

generate 
	genvar i; 
		for(i = 0; i < 2; i = i + 1)
			begin:oddEvenMerge 
				if(i == 0)
					begin 
					merge2to4#(.WIDTH(WIDTH)) comparator_0
					(
						.a(a[(i+1)*WIDTH-1:i*WIDTH]),
						.b(b[(i+1)*WIDTH-1:i*WIDTH]),
						.L(c[WIDTH-1:0]),
						.H(tempA[WIDTH-1:0])
					);				
					end
				else
					begin 
						comparator#(.WIDTH(WIDTH)) comparator_1
					(
						.A(a[(i+1)*WIDTH-1:i*WIDTH]),
						.B(b[(i+1)*WIDTH-1:i*WIDTH]),
						.L(tempB[WIDTH-1:0]),
						.H(c[(i+(i+2))*WIDTH-1:((i+(i+2))-1)*WIDTH])
					);						
					end
			end
	endgenerate
	
generate 
	genvar j; 
		for(j = 0; j < n-1; j = j + 1)
			begin:finalComparators 
				comparator#(.WIDTH(WIDTH)) comparator_2
					(
						.A(tempA),
						.B(tempB),
						.L(c[(j+(j+2))*WIDTH-1:((j+(j+2))-1)*WIDTH]),
						.H(c[(j+(j+3))*WIDTH-1:((j+(j+3))-1)*WIDTH])
					);						
			end
	endgenerate	
endmodule