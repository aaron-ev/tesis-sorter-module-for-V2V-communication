vendor_name = ModelSim
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/oddEvenUnit.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/oddEvenInputs.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge8to16 _r.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge4to8 _r.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge2to4.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/regLoad.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge8to16.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge4to8.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/comparator.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/loadReg_tb.vwf
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/merge.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/m_2to4.v
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/m_2to4_tb.vwf
source_file = 1, C:/Users/aaron/Desktop/git_tesis/quartusWorkspace/mergeTest/db/mergeTest.cbx.xml
design_name = m_2to4
instance = comp, \oddEvenMerge[0].comparator_0|H[3]~5 , oddEvenMerge[0].comparator_0|H[3]~5, m_2to4, 1
instance = comp, \c[0]~output , c[0]~output, m_2to4, 1
instance = comp, \c[1]~output , c[1]~output, m_2to4, 1
instance = comp, \c[2]~output , c[2]~output, m_2to4, 1
instance = comp, \c[3]~output , c[3]~output, m_2to4, 1
instance = comp, \c[4]~output , c[4]~output, m_2to4, 1
instance = comp, \c[5]~output , c[5]~output, m_2to4, 1
instance = comp, \c[6]~output , c[6]~output, m_2to4, 1
instance = comp, \c[7]~output , c[7]~output, m_2to4, 1
instance = comp, \c[8]~output , c[8]~output, m_2to4, 1
instance = comp, \c[9]~output , c[9]~output, m_2to4, 1
instance = comp, \c[10]~output , c[10]~output, m_2to4, 1
instance = comp, \c[11]~output , c[11]~output, m_2to4, 1
instance = comp, \c[12]~output , c[12]~output, m_2to4, 1
instance = comp, \c[13]~output , c[13]~output, m_2to4, 1
instance = comp, \c[14]~output , c[14]~output, m_2to4, 1
instance = comp, \c[15]~output , c[15]~output, m_2to4, 1
instance = comp, \a1_t[0]~output , a1_t[0]~output, m_2to4, 1
instance = comp, \a1_t[1]~output , a1_t[1]~output, m_2to4, 1
instance = comp, \a1_t[2]~output , a1_t[2]~output, m_2to4, 1
instance = comp, \a1_t[3]~output , a1_t[3]~output, m_2to4, 1
instance = comp, \b1_t[0]~output , b1_t[0]~output, m_2to4, 1
instance = comp, \b1_t[1]~output , b1_t[1]~output, m_2to4, 1
instance = comp, \b1_t[2]~output , b1_t[2]~output, m_2to4, 1
instance = comp, \b1_t[3]~output , b1_t[3]~output, m_2to4, 1
instance = comp, \a2_t[0]~output , a2_t[0]~output, m_2to4, 1
instance = comp, \a2_t[1]~output , a2_t[1]~output, m_2to4, 1
instance = comp, \a2_t[2]~output , a2_t[2]~output, m_2to4, 1
instance = comp, \a2_t[3]~output , a2_t[3]~output, m_2to4, 1
instance = comp, \b2_t[0]~output , b2_t[0]~output, m_2to4, 1
instance = comp, \b2_t[1]~output , b2_t[1]~output, m_2to4, 1
instance = comp, \b2_t[2]~output , b2_t[2]~output, m_2to4, 1
instance = comp, \b2_t[3]~output , b2_t[3]~output, m_2to4, 1
instance = comp, \inba[0]~input , inba[0]~input, m_2to4, 1
instance = comp, \inba[8]~input , inba[8]~input, m_2to4, 1
instance = comp, \inba[3]~input , inba[3]~input, m_2to4, 1
instance = comp, \inba[10]~input , inba[10]~input, m_2to4, 1
instance = comp, \inba[2]~input , inba[2]~input, m_2to4, 1
instance = comp, \inba[9]~input , inba[9]~input, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|LessThan0~0 , oddEvenMerge[0].comparator_0|LessThan0~0, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|LessThan0~1 , oddEvenMerge[0].comparator_0|LessThan0~1, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|LessThan0~2 , oddEvenMerge[0].comparator_0|LessThan0~2, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|L[0]~2 , oddEvenMerge[0].comparator_0|L[0]~2, m_2to4, 1
instance = comp, \inba[1]~input , inba[1]~input, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|L[1]~3 , oddEvenMerge[0].comparator_0|L[1]~3, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|L[2]~4 , oddEvenMerge[0].comparator_0|L[2]~4, m_2to4, 1
instance = comp, \inba[11]~input , inba[11]~input, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|L[3]~5 , oddEvenMerge[0].comparator_0|L[3]~5, m_2to4, 1
instance = comp, \inba[15]~input , inba[15]~input, m_2to4, 1
instance = comp, \inba[7]~input , inba[7]~input, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|L[3]~5 , oddEvenMerge[1].comparator_1|L[3]~5, m_2to4, 1
instance = comp, \inba[14]~input , inba[14]~input, m_2to4, 1
instance = comp, \inba[4]~input , inba[4]~input, m_2to4, 1
instance = comp, \inba[13]~input , inba[13]~input, m_2to4, 1
instance = comp, \inba[12]~input , inba[12]~input, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|LessThan0~0 , oddEvenMerge[1].comparator_1|LessThan0~0, m_2to4, 1
instance = comp, \inba[6]~input , inba[6]~input, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|LessThan0~1 , oddEvenMerge[1].comparator_1|LessThan0~1, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|LessThan0~2 , oddEvenMerge[1].comparator_1|LessThan0~2, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|L[0]~2 , oddEvenMerge[1].comparator_1|L[0]~2, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|L[1]~3 , oddEvenMerge[1].comparator_1|L[1]~3, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|H[0]~2 , oddEvenMerge[0].comparator_0|H[0]~2, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|LessThan0~0 , finalComparators[0].comparator_2|LessThan0~0, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|H[2]~4 , oddEvenMerge[0].comparator_0|H[2]~4, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|L[2]~4 , oddEvenMerge[1].comparator_1|L[2]~4, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|LessThan0~1 , finalComparators[0].comparator_2|LessThan0~1, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|LessThan0~2 , finalComparators[0].comparator_2|LessThan0~2, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|LessThan0~3 , finalComparators[0].comparator_2|LessThan0~3, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|L[0]~6 , finalComparators[0].comparator_2|L[0]~6, m_2to4, 1
instance = comp, \oddEvenMerge[0].comparator_0|H[1]~3 , oddEvenMerge[0].comparator_0|H[1]~3, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|L[1]~7 , finalComparators[0].comparator_2|L[1]~7, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|L[2]~8 , finalComparators[0].comparator_2|L[2]~8, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|L[3]~9 , finalComparators[0].comparator_2|L[3]~9, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|H[0]~6 , finalComparators[0].comparator_2|H[0]~6, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|H[1]~7 , finalComparators[0].comparator_2|H[1]~7, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|H[2]~8 , finalComparators[0].comparator_2|H[2]~8, m_2to4, 1
instance = comp, \finalComparators[0].comparator_2|H[3]~9 , finalComparators[0].comparator_2|H[3]~9, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|H[0]~2 , oddEvenMerge[1].comparator_1|H[0]~2, m_2to4, 1
instance = comp, \inba[5]~input , inba[5]~input, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|H[1]~3 , oddEvenMerge[1].comparator_1|H[1]~3, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|H[2]~4 , oddEvenMerge[1].comparator_1|H[2]~4, m_2to4, 1
instance = comp, \oddEvenMerge[1].comparator_1|H[3]~5 , oddEvenMerge[1].comparator_1|H[3]~5, m_2to4, 1
